class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        set<vector<int>> res;
        unordered_set<int> dups;
        unordered_map<int, int> seen;
        for(int i =0;i<nums.size();i++){
            if(dups.find(nums[i])==dups.end()){
                dups.insert(nums[i]);
                for(int j=i+1;j<nums.size();j++){
                    int complement=-nums[i]-nums[j];
                    auto it=seen.find(complement);
                    if(it!=seen.end() && it->second==i){
                        vector<int>triplet={nums[i],nums[j],complement};
                        sort(triplet.begin(),triplet.end());
                        res.insert(triplet);
                    }
                    seen[nums[j]]=i;
                }
                
            }
            
        }
        return vector<vector<int>>(res.begin(),res.end());
    }
};
